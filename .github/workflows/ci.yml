name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install Go Task
      uses: arduino/setup-task@v1

    - name: Install buf
      uses: bufbuild/buf-setup-action@v1

    - name: Install protoc
      uses: arduino/setup-protoc@v2
      with:
        version: "25.1"

    - name: Install grpcio-tools
      run: |
        python -m pip install --upgrade pip
        pip install grpcio-tools==1.70.0

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Generate Python code from protobuf
      run: task gen-proto

    - name: Install dependencies
      run: |
        uv pip install -e . --system
        uv pip install pytest ruff --system

    - name: Lint with Ruff
      run: ruff check

    - name: Format check with Ruff
      run: ruff format --check

    - name: Build package
      run: task build-package

    - name: Run tests
      run: pytest
